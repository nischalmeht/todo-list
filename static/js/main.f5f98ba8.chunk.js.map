{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","fSubmit","e","preventDefault","console","log","datas","state","name","refs","value","address","act","data","push","index","setState","myForm","reset","focus","fRemove","i","splice","fEdit","title","this","className","ref","type","placeholder","onClick","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA+FeA,E,kDA1Fb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAaRC,QAAU,SAACC,GACTA,EAAEC,iBACFC,QAAQC,IAAI,OAEZ,IAAIC,EAAQ,EAAKC,MAAMD,MACnBE,EAAO,EAAKC,KAAKD,KAAKE,MACtBC,EAAU,EAAKF,KAAKE,QAAQD,MAEhC,GAAsB,IAAnB,EAAKH,MAAMK,IAAU,CACtB,IAAIC,EAAO,CACTL,OAAMG,WAERL,EAAMQ,KAAKD,OACR,CACH,IAAIE,EAAQ,EAAKR,MAAMQ,MACvBT,EAAMS,GAAOP,KAAOA,EACpBF,EAAMS,GAAOJ,QAAUA,EAGzB,EAAKK,SAAS,CACZV,MAAOA,EACPM,IAAK,IAGP,EAAKH,KAAKQ,OAAOC,QACjB,EAAKT,KAAKD,KAAKW,SAvCC,EA0ClBC,QAAU,SAACC,GACT,IAAIf,EAAQ,EAAKC,MAAMD,MACvBA,EAAMgB,OAAOD,EAAE,GACf,EAAKL,SAAS,CACZV,MAAOA,IAGT,EAAKG,KAAKQ,OAAOC,QACjB,EAAKT,KAAKD,KAAKW,SAlDC,EAqDlBI,MAAQ,SAACF,GACP,IAAIR,EAAO,EAAKN,MAAMD,MAAMe,GAC5B,EAAKZ,KAAKD,KAAKE,MAAQG,EAAKL,KAC5B,EAAKC,KAAKE,QAAQD,MAAQG,EAAKF,QAE/B,EAAKK,SAAS,CACZJ,IAAK,EACLG,MAAOM,IAGT,EAAKZ,KAAKD,KAAKW,SA7Df,EAAKZ,MAAM,CACTiB,MAAO,sBACPZ,IAAK,EACLG,MAAO,GACPT,MAAO,IANO,E,qDAUlB,WACEmB,KAAKhB,KAAKD,KAAKW,U,oBAuDjB,WAAU,IAAD,OACHb,EAAQmB,KAAKlB,MAAMD,MACvB,OACE,sBAAKoB,UAAU,MAAf,UACE,6BAAKD,KAAKlB,MAAMiB,QAChB,uBAAMG,IAAI,SAASD,UAAU,SAA7B,UACE,uBAAOE,KAAK,OAAOD,IAAI,OAAOE,YAAY,YAAYH,UAAU,cAChE,uBAAOE,KAAK,OAAOD,IAAI,UAAUE,YAAY,eAAeH,UAAU,cACtE,wBAAQI,QAAS,SAAC5B,GAAD,OAAK,EAAKD,QAAQC,IAAIwB,UAAU,WAAjD,wBAEF,8BACGpB,EAAMyB,KAAI,SAAClB,EAAMQ,GAAP,OACT,qBAAYK,UAAU,SAAtB,UACGL,EAAE,EADL,KACUR,EAAKL,KADf,KACuBK,EAAKF,QAC1B,wBAAQmB,QAAS,kBAAI,EAAKV,QAAQC,IAAIK,UAAU,eAAhD,qBACA,wBAAQI,QAAS,kBAAI,EAAKP,MAAMF,IAAIK,UAAU,eAA9C,qBAHOL,e,GAhFHW,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5f98ba8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      title: 'My CRUD Application',\n      act: 0,\n      index: '',\n      datas: []\n    }\n  } \n\n  componentDidMount(){\n    this.refs.name.focus();\n  }\n\n  fSubmit = (e) =>{\n    e.preventDefault();\n    console.log('try');\n\n    let datas = this.state.datas;\n    let name = this.refs.name.value;\n    let address = this.refs.address.value;\n\n    if(this.state.act === 0){   //new\n      let data = {\n        name, address\n      }\n      datas.push(data);\n    }else{                      //update\n      let index = this.state.index;\n      datas[index].name = name;\n      datas[index].address = address;\n    }    \n\n    this.setState({\n      datas: datas,\n      act: 0\n    });\n\n    this.refs.myForm.reset();\n    this.refs.name.focus();\n  }\n\n  fRemove = (i) => {\n    let datas = this.state.datas;\n    datas.splice(i,1);\n    this.setState({\n      datas: datas\n    });\n\n    this.refs.myForm.reset();\n    this.refs.name.focus();\n  }\n\n  fEdit = (i) => {\n    let data = this.state.datas[i];\n    this.refs.name.value = data.name;\n    this.refs.address.value = data.address;\n\n    this.setState({\n      act: 1,\n      index: i\n    });\n\n    this.refs.name.focus();\n  }  \n\n  render() {\n    let datas = this.state.datas;\n    return (\n      <div className=\"App\">\n        <h2>{this.state.title}</h2>\n        <form ref=\"myForm\" className=\"myForm\">\n          <input type=\"text\" ref=\"name\" placeholder=\"your name\" className=\"formField\" />\n          <input type=\"text\" ref=\"address\" placeholder=\"your address\" className=\"formField\" />\n          <button onClick={(e)=>this.fSubmit(e)} className=\"myButton\">submit </button>\n        </form>\n        <pre>\n          {datas.map((data, i) =>\n            <li key={i} className=\"myList\">\n              {i+1}. {data.name}, {data.address}\n              <button onClick={()=>this.fRemove(i)} className=\"myListButton\">remove </button>\n              <button onClick={()=>this.fEdit(i)} className=\"myListButton\">edit </button>\n            </li>\n          )}\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}